<?xml version="1.0" encoding="UTF-8"?>

<!-- $Revision: 1.21 $ $Date: 2004-10-27 20:54:09 +0600 (Wed, 27 Oct 2004) $ -->

<project default="jar"
         xmlns:j="jelly:core"
         xmlns:u="jelly:util"
         xmlns:maven="jelly:maven"
         xmlns:util="jelly:util"
         xmlns:deploy="deploy"
         xmlns:ant="jelly:ant">

    <postGoal name="java:jar-resources">
        <tstamp>
            <format property="build.time" pattern="MMM dd, yyyy (hh:mm:ss z)" locale="en"/>
        </tstamp>
        <replace dir="${maven.build.dest}/org/apache/axis2/wsdl/template/java/">
            <include name="*.xsl"/>
            <replacefilter token="#today#" value="${build.time}"/>
            <replacefilter token="#axisVersion#" value="${pom.currentVersion}"/>
        </replace>
    </postGoal>

    <preGoal name="itest:compile">
        <u:file var="file" name="${maven.itest.src}"/>
        <j:if test="${!file.exists()}">
            <j:expr value="${context.setVariable('maven.itest.skip', 'true')}"/>
        </j:if>
    </preGoal>

    <!-- run the schema compiler -->
    <postGoal name="test:compile">
        <!--<j:if test="context.getVariable('maven.test.skip') != 'true'}">-->

        <j:set var="compiled.classes.dir" value="target/classes"/>
        <!-- Theres got to be a better way to do this -->
        <j:set var="schema.source.dir" value="test-resources/xsd"/>
        <j:set var="schema.output.base.dir" value="target/schema"/>
        <j:set var="schema.generated.src.dir" value="${schema.output.base.dir}/src"/>
        <j:set var="schema.generated.classes.dir" value="${schema.output.base.dir}/classes"/>
        <!-- make the dirs -->
        <mkdir dir="${schema.output.base.dir}"/>
        <mkdir dir="${schema.generated.src.dir}"/>
        <mkdir dir="${schema.generated.classes.dir}"/>
        <!-- Run schema compiler with designated schemas -->
        <!-- simple max occurs 2 xsd -->
        <java classname="org.apache.axis2.schema.XSD2Java" fork="true">
            <classpath refid="maven.dependency.classpath"/>
            <classpath location="${compiled.classes.dir}"/>
            <arg file="${schema.source.dir}/simple_maxOccurs2.xsd"/>
            <arg file="${schema.generated.src.dir}"/>
        </java>
        <!-- anon complex type xsd -->
        <java classname="org.apache.axis2.schema.XSD2Java" fork="true">
            <classpath refid="maven.dependency.classpath"/>
            <classpath location="${compiled.classes.dir}"/>
            <arg file="${schema.source.dir}/anonymous_complexType.xsd"/>
            <arg file="${schema.generated.src.dir}"/>
        </java>
        <!-- simple max occurs xsd -->
        <java classname="org.apache.axis2.schema.XSD2Java" fork="true">
            <classpath refid="maven.dependency.classpath"/>
            <classpath location="${compiled.classes.dir}"/>
            <arg file="${schema.source.dir}/simple_maxOccurs.xsd"/>
            <arg file="${schema.generated.src.dir}"/>
        </java>

        <!-- ################################################################### -->
        <!-- All simple primitive types xsd -->
        <java classname="org.apache.axis2.schema.XSD2Java" fork="true">
            <classpath refid="maven.dependency.classpath"/>
            <classpath location="${compiled.classes.dir}"/>
            <arg file="${schema.source.dir}/simple/simpleType-All.xsd"/>
            <arg file="${schema.generated.src.dir}"/>
        </java>

           <!-- All simple derived types xsd -->
        <java classname="org.apache.axis2.schema.XSD2Java" fork="true">
            <classpath refid="maven.dependency.classpath"/>
            <classpath location="${compiled.classes.dir}"/>
            <arg file="${schema.source.dir}/derived/derivedType-All.xsd"/>
            <arg file="${schema.generated.src.dir}"/>
        </java>
        <!-- ################################################################### -->
        <!-- Compile the generated classes -->
        <javac destdir="${schema.generated.classes.dir}" srcdir="${schema.generated.src.dir}">
            <classpath refid="maven.dependency.classpath"></classpath>
            <classpath location="${compiled.classes.dir}"></classpath>
        </javac>

        <ant:path id="schema.generated.classes.dir" location="${schema.generated.classes.dir}"/>
        <maven:addPath id="maven.dependency.classpath" refid="schema.generated.classes.dir"/>
        <!--</j:if>-->
    </postGoal>

</project>

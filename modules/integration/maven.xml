<?xml version="1.0" encoding="UTF-8"?>

<!-- $Revision: 1.21 $ $Date: 2004-10-27 20:54:09 +0600 (Wed, 27 Oct 2004) $ -->

<project default="jar"
    xmlns:j="jelly:core"
    xmlns:u="jelly:util"
    xmlns:maven="jelly:maven"
    xmlns:deploy="deploy"
    xmlns:ant="jelly:ant">
    <j:set var="samples.dir" value="target/samples"/>

    <postGoal name="itest:compile">
        <mkdir dir="target/itest-classes/modules"/>
        <copy file="../addressing/target/addressing.mar"
              tofile="target/itest-classes/modules/addressing.mar"/>
    </postGoal>

    <postGoal name="test:compile">
      <j:if test="context.getVariable('maven.test.skip') != 'true'}">
        <mkdir dir="target/test-resources/samples/modules"/>
        <mkdir dir="target/test-resources/repository-client/modules"/>
        <copy file="../addressing/target/addressing.mar"
            tofile="target/test-resources/samples/modules/addressing.mar"/>
        <copy file="../addressing/target/addressing.mar"
            tofile="target/test-resources/repository-client/modules/addressing.mar"/>
        <mkdir dir="target/toWar/services/"/>

        <!-- Create Chuncked enabled Repository -->
        <mkdir dir="target/test-resources/chuncked-enabledRepository"/>
        <copy file="test/org/apache/axis2/engine/chuncking-enabled-axis2.xml"
            tofile="target/test-resources/chuncked-enabledRepository/axis2.xml"/>

        <!-- Create Mail Client transport enabled Repository -->
        <mkdir dir="target/test-resources/mail-transport-client-enabledRepository"/>
        <mkdir dir="target/test-resources/mail-transport-client-enabledRepository/modules"/>
        <copy file="test/org/apache/axis2/mail/mail-enabled-client-axis2.xml"
            tofile="target/test-resources/mail-transport-client-enabledRepository/axis2.xml"/>
        <copy file="../addressing/target/addressing.mar"
            tofile="target/test-resources/mail-transport-client-enabledRepository/modules/addressing.mar"/>

        <!-- Create Mail Server transport enabled Repository -->
        <mkdir dir="target/test-resources/mail-transport-server-enabledRepository"/>
        <mkdir dir="target/test-resources/mail-transport-server-enabledRepository/modules"/>
        <copy file="test/org/apache/axis2/mail/mail-enabled-server-axis2.xml"
            tofile="target/test-resources/mail-transport-server-enabledRepository/axis2.xml"/>
        <copy file="../addressing/target/addressing.mar"
            tofile="target/test-resources/mail-transport-server-enabledRepository/modules/addressing.mar"/>

        <mkdir dir="target/test-resources/MessageContextInjectionRepo"/>
        <mkdir dir="target/test-resources/intregrationRepo/modules"/>
        <copy file="../addressing/target/addressing.mar"
              tofile="target/test-resources/intregrationRepo/modules/addressing.mar"/>


        <!-- Commons transport enabled enabled Repository -->
        <mkdir dir="target/test-resources/commons-http-enabledRepository"/>
        <copy file="test/org/apache/axis2/engine/commons-http-enabled-axis2.xml"
            tofile="target/test-resources/commons-http-enabledRepository/axis2.xml"/>

        <!-- MTOM enabled Repository -->
        <mkdir dir="target/test-resources/MTOM-enabledRepository"/>
        <copy file="test/org/apache/axis2/mtom/MTOM-enabled-axis2.xml"
            tofile="target/test-resources/MTOM-enabledRepository/axis2.xml"/>
            
        <!-- MTOM enabled Repository -->
        <mkdir dir="target/test-resources/MTOM-fileCache-enabledRepository"/>
        <copy file="test/org/apache/axis2/mtom/MTOM-fileCache-enabled-axis2.xml"
            tofile="target/test-resources/MTOM-fileCache-enabledRepository/axis2.xml"/>
          
          <!-- Groovy repository -->  
        <mkdir dir="target/groovyRepo"/>
        <mkdir dir="target/groovyRepo/services"/>
        <mkdir dir="target/groovyRepo/modules"/>
        <ant:copy file="../samples/target/samples/groovyService.aar" tofile="target/groovyRepo/services/groovyService.aar"/>   
        <copy file="../addressing/target/addressing.mar"
            tofile="target/groovyRepo/modules/addressing.mar"/>

	<!--Axis2 repositories for WS-Security interop tests -->

	<!-- A default repository with security and addressing modules -->
        <mkdir dir="target/test-resources/default_security_client_repo"/>
        <mkdir dir="target/test-resources/default_security_client_repo/modules"/>
        <copy file="../security/target/security.mar"
            tofile="target/test-resources/default_security_client_repo/modules/security.mar"/>
        <copy file="../addressing/target/addressing.mar"
            tofile="target/test-resources/default_security_client_repo/modules/addressing.mar"/>

	<!-- Scenario 1 -->
        <mkdir dir="target/test-resources/scenario1_client_repo"/>
        <mkdir dir="target/test-resources/scenario1_client_repo/modules"/>
        <mkdir dir="target/test-resources/scenario1_client_repo/services"/>

        <mkdir dir="target/test-resources/scenario1_service_repo"/>
        <mkdir dir="target/test-resources/scenario1_service_repo/services"/>
        <mkdir dir="target/test-resources/scenario1_service_repo/modules"/>

	<!-- setup scenario 1 client repository-->
        <copy file="test-resources/security/s1.client.axis2.xml"
            tofile="target/test-resources/scenario1_client_repo/axis2.xml"/>
        <copy file="../security/target/security.mar"
            tofile="target/test-resources/scenario1_client_repo/modules/security.mar"/>

	<!-- This is to add the PWCallback in to the classpath for the client to pick
	     the password callback class.
	-->
   	<ant:path id="sec.interop.service.jar" location="../security/target/PingPort.aar"/>
        <maven:addPath id="maven.dependency.classpath" refid="sec.interop.service.jar"/>

	<!-- setup scenario 1 service repository-->
        <copy file="test-resources/security/s1.service.axis2.xml"
            tofile="target/test-resources/scenario1_service_repo/axis2.xml"/>
        <copy file="../security/target/security.mar"
            tofile="target/test-resources/scenario1_service_repo/modules/security.mar"/>

	<!-- Copy services.xml to ../security/target/interop/classes/META-INF/ -->
	<copy file="test-resources/security/s1.service.xml"
            tofile="../security/target/interop/classes/META-INF/services.xml" overwrite="true"/>

	<!-- Create the .aar file -->
	<jar jarfile="target/test-resources/scenario1_service_repo/services/PingPort.aar" 
	    basedir="../security/target/interop/classes" />

	<!-- Scenario 2 -->
        <mkdir dir="target/test-resources/scenario2_client_repo"/>
        <mkdir dir="target/test-resources/scenario2_client_repo/modules"/>

        <mkdir dir="target/test-resources/scenario2_service_repo"/>
        <mkdir dir="target/test-resources/scenario2_service_repo/services"/>
        <mkdir dir="target/test-resources/scenario2_service_repo/modules"/>

	<!-- setup scenario 2 client repository-->
        <copy file="test-resources/security/s2.client.axis2.xml"
            tofile="target/test-resources/scenario2_client_repo/axis2.xml"/>
        <copy file="../security/target/security.mar"
            tofile="target/test-resources/scenario2_client_repo/modules/security.mar"/>

	<!-- setup scenario 2 service repository-->
        <copy file="test-resources/security/s2.service.axis2.xml"
            tofile="target/test-resources/scenario2_service_repo/axis2.xml"/>
        <copy file="../security/target/security.mar"
            tofile="target/test-resources/scenario2_service_repo/modules/security.mar"/>

	<!-- Copy services.xml to ../security/target/interop/classes/META-INF/ -->
	<copy file="test-resources/security/s2.service.xml"
            tofile="../security/target/interop/classes/META-INF/services.xml" overwrite="true"/>

	<!-- Create the .aar file -->
	<jar jarfile="target/test-resources/scenario2_service_repo/services/PingPort.aar" 
	    basedir="../security/target/interop/classes" />

	<!-- Scenario 2a -->
        <mkdir dir="target/test-resources/scenario2a_client_repo"/>
        <mkdir dir="target/test-resources/scenario2a_client_repo/modules"/>

        <mkdir dir="target/test-resources/scenario2a_service_repo"/>
        <mkdir dir="target/test-resources/scenario2a_service_repo/services"/>
        <mkdir dir="target/test-resources/scenario2a_service_repo/modules"/>

	<!-- setup scenario 2a client repository-->
        <copy file="test-resources/security/s2a.client.axis2.xml"
            tofile="target/test-resources/scenario2a_client_repo/axis2.xml"/>
        <copy file="../security/target/security.mar"
            tofile="target/test-resources/scenario2a_client_repo/modules/security.mar"/>

	<!-- setup scenario 2a service repository-->
        <copy file="test-resources/security/s2a.service.axis2.xml"
            tofile="target/test-resources/scenario2a_service_repo/axis2.xml"/>
        <copy file="../security/target/security.mar"
            tofile="target/test-resources/scenario2a_service_repo/modules/security.mar"/>

	<!-- Copy services.xml to ../security/target/interop/classes/META-INF/ -->
	<copy file="test-resources/security/s2a.service.xml"
            tofile="../security/target/interop/classes/META-INF/services.xml" overwrite="true"/>

	<!-- Create the .aar file -->
	<jar jarfile="target/test-resources/scenario2a_service_repo/services/PingPort.aar" 
	    basedir="../security/target/interop/classes" />

	<!-- Scenario 3 -->
        <mkdir dir="target/test-resources/scenario3_client_repo"/>
        <mkdir dir="target/test-resources/scenario3_client_repo/modules"/>

        <mkdir dir="target/test-resources/scenario3_service_repo"/>
        <mkdir dir="target/test-resources/scenario3_service_repo/services"/>
        <mkdir dir="target/test-resources/scenario3_service_repo/modules"/>

	<!-- setup scenario 3 client repository-->
        <copy file="test-resources/security/s3.client.axis2.xml"
            tofile="target/test-resources/scenario3_client_repo/axis2.xml"/>
        <copy file="../security/target/security.mar"
            tofile="target/test-resources/scenario3_client_repo/modules/security.mar"/>

	<!-- setup scenario 3 service repository-->
        <copy file="test-resources/security/s3.service.axis2.xml"
            tofile="target/test-resources/scenario3_service_repo/axis2.xml"/>
        <copy file="../security/target/security.mar"
            tofile="target/test-resources/scenario3_service_repo/modules/security.mar"/>

	<!-- Copy services.xml to ../security/target/interop/classes/META-INF/ -->
	<copy file="test-resources/security/s3.service.xml"
            tofile="../security/target/interop/classes/META-INF/services.xml" overwrite="true"/>

	<!-- Create the .aar file -->
	<jar jarfile="target/test-resources/scenario3_service_repo/services/PingPort.aar" 
	    basedir="../security/target/interop/classes" />


	<!-- Scenario 4 -->
        <mkdir dir="target/test-resources/scenario4_client_repo"/>
        <mkdir dir="target/test-resources/scenario4_client_repo/modules"/>

        <mkdir dir="target/test-resources/scenario4_service_repo"/>
        <mkdir dir="target/test-resources/scenario4_service_repo/services"/>
        <mkdir dir="target/test-resources/scenario4_service_repo/modules"/>

	<!-- setup scenario 4 client repository-->
        <copy file="test-resources/security/s4.client.axis2.xml"
            tofile="target/test-resources/scenario4_client_repo/axis2.xml"/>
        <copy file="../security/target/security.mar"
            tofile="target/test-resources/scenario4_client_repo/modules/security.mar"/>

	<!-- setup scenario 4 service repository-->
        <copy file="test-resources/security/s4.service.axis2.xml"
            tofile="target/test-resources/scenario4_service_repo/axis2.xml"/>
        <copy file="../security/target/security.mar"
            tofile="target/test-resources/scenario4_service_repo/modules/security.mar"/>

	<!-- Copy services.xml to ../security/target/interop/classes/META-INF/ -->
	<copy file="test-resources/security/s4.service.xml"
            tofile="../security/target/interop/classes/META-INF/services.xml" overwrite="true"/>

	<!-- Create the .aar file -->
	<jar jarfile="target/test-resources/scenario4_service_repo/services/PingPort.aar" 
	    basedir="../security/target/interop/classes" />


	<!-- Scenario 5 -->
        <mkdir dir="target/test-resources/scenario5_client_repo"/>
        <mkdir dir="target/test-resources/scenario5_client_repo/modules"/>

        <mkdir dir="target/test-resources/scenario5_service_repo"/>
        <mkdir dir="target/test-resources/scenario5_service_repo/services"/>
        <mkdir dir="target/test-resources/scenario5_service_repo/modules"/>

	<!-- setup scenario 5 client repository-->
        <copy file="test-resources/security/s5.client.axis2.xml"
            tofile="target/test-resources/scenario5_client_repo/axis2.xml"/>
        <copy file="../security/target/security.mar"
            tofile="target/test-resources/scenario5_client_repo/modules/security.mar"/>

	<!-- setup scenario 5 service repository-->
        <copy file="test-resources/security/s5.service.axis2.xml"
            tofile="target/test-resources/scenario5_service_repo/axis2.xml"/>
        <copy file="../security/target/security.mar"
            tofile="target/test-resources/scenario5_service_repo/modules/security.mar"/>

	<!-- Copy services.xml to ../security/target/interop/classes/META-INF/ -->
	<copy file="test-resources/security/s5.service.xml"
            tofile="../security/target/interop/classes/META-INF/services.xml" overwrite="true"/>

	<!-- Create the .aar file -->
	<jar jarfile="target/test-resources/scenario5_service_repo/services/PingPort.aar" 
	    basedir="../security/target/interop/classes" />


	<!-- Scenario 6 -->
        <mkdir dir="target/test-resources/scenario6_client_repo"/>
        <mkdir dir="target/test-resources/scenario6_client_repo/modules"/>

        <mkdir dir="target/test-resources/scenario6_service_repo"/>
        <mkdir dir="target/test-resources/scenario6_service_repo/services"/>
        <mkdir dir="target/test-resources/scenario6_service_repo/modules"/>

	<!-- setup scenario 6 client repository-->
        <copy file="test-resources/security/s6.client.axis2.xml"
            tofile="target/test-resources/scenario6_client_repo/axis2.xml"/>
        <copy file="../security/target/security.mar"
            tofile="target/test-resources/scenario6_client_repo/modules/security.mar"/>

	<!-- setup scenario 6 service repository-->
        <copy file="test-resources/security/s6.service.axis2.xml"
            tofile="target/test-resources/scenario6_service_repo/axis2.xml"/>
        <copy file="../security/target/security.mar"
            tofile="target/test-resources/scenario6_service_repo/modules/security.mar"/>

	<!-- Copy services.xml to ../security/target/interop/classes/META-INF/ -->
	<copy file="test-resources/security/s6.service.xml"
            tofile="../security/target/interop/classes/META-INF/services.xml" overwrite="true"/>

	<!-- Create the .aar file -->
	<jar jarfile="target/test-resources/scenario6_service_repo/services/PingPort.aar" 
	    basedir="../security/target/interop/classes" />


	<!-- Scenario 7 -->
        <mkdir dir="target/test-resources/scenario7_client_repo"/>
        <mkdir dir="target/test-resources/scenario7_client_repo/modules"/>

        <mkdir dir="target/test-resources/scenario7_service_repo"/>
        <mkdir dir="target/test-resources/scenario7_service_repo/services"/>
        <mkdir dir="target/test-resources/scenario7_service_repo/modules"/>

	<!-- setup scenario 7 client repository-->
        <copy file="test-resources/security/s7.client.axis2.xml"
            tofile="target/test-resources/scenario7_client_repo/axis2.xml"/>
        <copy file="../security/target/security.mar"
            tofile="target/test-resources/scenario7_client_repo/modules/security.mar"/>

	<!-- setup scenario 7 service repository-->
        <copy file="test-resources/security/s7.service.axis2.xml"
            tofile="target/test-resources/scenario7_service_repo/axis2.xml"/>
        <copy file="../security/target/security.mar"
            tofile="target/test-resources/scenario7_service_repo/modules/security.mar"/>

	<!-- Copy services.xml to ../security/target/interop/classes/META-INF/ -->
	<copy file="test-resources/security/s7.service.xml"
            tofile="../security/target/interop/classes/META-INF/services.xml" overwrite="true"/>

	<!-- Create the .aar file -->
	<jar jarfile="target/test-resources/scenario7_service_repo/services/PingPort.aar" 
	    basedir="../security/target/interop/classes" />


	<!-- Copying the DOM3 stuff to the endorsed dir -->
        <mkdir dir="target/test-resources/endorsed"/>
	<copy file="${maven.repo.local}/xerces/jars/xercesImpl-2.6.2.jar" todir="target/test-resources/endorsed"/>
	<copy file="${maven.repo.local}/xerces/jars/xmlParserAPIs-2.6.2.jar" todir="target/test-resources/endorsed"/>


	<!-- Scenario ST1 -->
        <mkdir dir="target/test-resources/scenarioST1_client_repo"/>
        <mkdir dir="target/test-resources/scenarioST1_client_repo/modules"/>

        <mkdir dir="target/test-resources/scenarioST1_service_repo"/>
        <mkdir dir="target/test-resources/scenarioST1_service_repo/services"/>
        <mkdir dir="target/test-resources/scenarioST1_service_repo/modules"/>

	<!-- setup scenario ST1 client repository-->
        <copy file="test-resources/security/sST1.client.axis2.xml"
            tofile="target/test-resources/scenarioST1_client_repo/axis2.xml"/>
        <copy file="../security/target/security.mar"
            tofile="target/test-resources/scenarioST1_client_repo/modules/security.mar"/>

	<!-- setup scenario ST1 service repository-->
        <copy file="test-resources/security/sST1.service.axis2.xml"
            tofile="target/test-resources/scenarioST1_service_repo/axis2.xml"/>
        <copy file="../security/target/security.mar"
            tofile="target/test-resources/scenarioST1_service_repo/modules/security.mar"/>

	<!-- Copy services.xml to ../security/target/interop/classes/META-INF/ -->
	<copy file="test-resources/security/sST1.service.xml"
            tofile="../security/target/interop/classes/META-INF/services.xml" overwrite="true"/>

	<!-- Create the .aar file -->
	<jar jarfile="target/test-resources/scenarioST1_service_repo/services/PingPort.aar" 
	    basedir="../security/target/interop/classes" />


	<!-- MTOM Optimized Security Test -->
        <mkdir dir="target/test-resources/mtom_sec_client_repo"/>
        <mkdir dir="target/test-resources/mtom_sec_client_repo/modules"/>

        <mkdir dir="target/test-resources/mtom_sec_service_repo"/>
        <mkdir dir="target/test-resources/mtom_sec_service_repo/services"/>
        <mkdir dir="target/test-resources/mtom_sec_service_repo/modules"/>

	<!-- MTOM Optimized Security Test client repository-->
        <copy file="test-resources/security/secMtom.client.axis2.xml"
            tofile="target/test-resources/mtom_sec_client_repo/axis2.xml"/>
        <copy file="../security/target/security.mar"
            tofile="target/test-resources/mtom_sec_client_repo/modules/security.mar"/>

	<!-- MTOM Optimized Security Test service repository-->
        <copy file="test-resources/security/secMtom.service.axis2.xml"
            tofile="target/test-resources/mtom_sec_service_repo/axis2.xml"/>
        <copy file="../security/target/security.mar"
            tofile="target/test-resources/mtom_sec_service_repo/modules/security.mar"/>

	<!-- Copy services.xml to ../security/target/interop/classes/META-INF/ -->
	<copy file="test-resources/security/secMtom.service.xml"
            tofile="../security/target/interop/classes/META-INF/services.xml" overwrite="true"/>

	<!-- Create the .aar file -->
	<jar jarfile="target/test-resources/mtom_sec_service_repo/services/PingPort.aar" 
	    basedir="../security/target/interop/classes" />



	<!-- Test with addressing and MTOM  -->
        <mkdir dir="target/test-resources/complete_client_repo"/>
        <mkdir dir="target/test-resources/complete_client_repo/modules"/>

        <mkdir dir="target/test-resources/complete_service_repo"/>
        <mkdir dir="target/test-resources/complete_service_repo/services"/>
        <mkdir dir="target/test-resources/complete_service_repo/modules"/>

	<!-- Test with addressing and MTOM client repository-->
        <copy file="test-resources/security/complete.client.axis2.xml"
            tofile="target/test-resources/complete_client_repo/axis2.xml"/>
        <copy file="../security/target/security.mar"
            tofile="target/test-resources/complete_client_repo/modules/security.mar"/>
        <copy file="../addressing/target/addressing.mar"
            tofile="target/test-resources/complete_client_repo/modules/addressing.mar"/>

	<!-- Test with addressing and MTOMservice repository-->
        <copy file="test-resources/security/complete.service.axis2.xml"
            tofile="target/test-resources/complete_service_repo/axis2.xml"/>
        <copy file="../security/target/security.mar"
            tofile="target/test-resources/complete_service_repo/modules/security.mar"/>
        <copy file="../addressing/target/addressing.mar"
            tofile="target/test-resources/complete_service_repo/modules/addressing.mar"/>

	<!-- Copy services.xml to ../security/target/interop/classes/META-INF/ -->
	<copy file="test-resources/security/complete.service.xml"
            tofile="../security/target/interop/classes/META-INF/services.xml" overwrite="true"/>

	<!-- Create the .aar file -->
	<jar jarfile="target/test-resources/complete_service_repo/services/PingPort.aar" 
	    basedir="../security/target/interop/classes" />



    <!-- Standard repository -->
    <mkdir dir="target/Repository"/>
        <mkdir dir="target/Repository/services"/>
        <mkdir dir="target/Repository/modules"/>
        <copy file="../addressing/target/addressing.mar"
            tofile="target/Repository/modules/addressing.mar"/>

        <j:jelly xmlns="jelly:ant">
            <ant:ant antfile="build.xml" inheritall="true" inheritrefs="true" dir="test-resources/SOAP12Testing/SOAP12TestModuleB"/>
            <ant:ant antfile="build.xml" inheritall="true" inheritrefs="true" dir="test-resources/SOAP12Testing/SOAP12TestModuleC"/>
            <ant:ant antfile="build.xml" inheritall="true" inheritrefs="true" dir="test-resources/SOAP12Testing/SOAP12TestServiceB"/>
            <ant:ant antfile="build.xml" inheritall="true" inheritrefs="true" dir="test-resources/SOAP12Testing/SOAP12TestServiceC"/>
        </j:jelly>
      </j:if>
    </postGoal>

    <postGoal name="test:test">
        <attainGoal name="mail-tests"/>
    </postGoal>
    
    <goal name="mail-tests">
      <!--   	 TODO call the Mail tests if the mail jar is presents
        <j:if test="${maven.repo.local}/j2ee/jars/mail.jar"> 
            <ant:ant antfile="script/mail-test.xml" inheritall="true" inheritrefs="true" dir="."/>
         </j:if> 
         maven -Dtestcase=org.foo.bar.MyTest test:single-test
         -->
    </goal>

    <!-- ================================================================ -->
    <!--- Google Mail Sample -->
    <!-- ================================================================ -->

    <goal name="test-mail">
        <echo message="running Mail tests"/>
        <echo message="${maven.repo.local}"/>
        <junit printsummary="yes" haltonfailure="yes">
            <classpath>
                <fileset dir="${maven.repo.local}">
                    <include name="j2ee/jars/***.jar"/>
                    <include name="axis/jars/axis2-core-0.9.jar"/>
                    <include name="axis/jars/axis2-xml-0.9.jar"/>
                    <include name="axis/jars/axis2-wsdl-0.9.jar"/>
                    <include name="axis/jars/axis-wsdl4j-1.2.jar"/>
                    <include name="commons-logging/jars/commons-logging-1.0.3.jar"/>
                    <include name="stax/jars/stax-1.1.2-dev.jar"/>
                    <include name="stax/jars/stax-api-1.0.jar"/>
                </fileset>
                <pathelement location="target/test-classes"/>
                <path refid="maven.dependency.classpath"/>
            </classpath>
            <formatter type="plain"/>
            <test name="org.apache.axis2.mail.MailetRequestResponceRawXMLTest"/>
            <test name="org.apache.axis2.mail.MailOneWayRawXMLTest"/>
            <test name="org.apache.axis2.mail.MailRequestResponseRawXMLTest"/>
        </junit>
    </goal>
</project>

<?xml version="1.0" encoding="UTF-8"?>

<!-- $Revision: 1.21 $ $Date: 2004-10-27 20:54:09 +0600 (Wed, 27 Oct 2004) $ -->

<project default="jar"
    xmlns:j="jelly:core"
    xmlns:u="jelly:util"
    xmlns:maven="jelly:maven"
    xmlns:deploy="deploy"
    xmlns:ant="jelly:ant">
    <j:set var="samples.dir" value="target/samples"/>

    <postGoal name="itest:compile">
        <mkdir dir="target/itest-classes/modules"/>
        <copy file="../addressing/target/addressing.mar"
              tofile="target/itest-classes/modules/addressing.mar"/>
    </postGoal>

    <postGoal name="test:compile">
        <mkdir dir="target/test-resources/samples/modules"/>
        <mkdir dir="target/test-resources/repository-client/modules"/>
        <copy file="../addressing/target/addressing.mar"
            tofile="target/test-resources/samples/modules/addressing.mar"/>
        <copy file="../addressing/target/addressing.mar"
            tofile="target/test-resources/repository-client/modules/addressing.mar"/>
        <mkdir dir="target/toWar/services/"/>

        <!-- Create Chuncked enabled Repository -->
        <mkdir dir="target/test-resources/chuncked-enabledRepository"/>
        <copy file="test/org/apache/axis2/engine/chuncking-enabled-axis2.xml"
            tofile="target/test-resources/chuncked-enabledRepository/axis2.xml"/>

        <!-- Create Mail Client transport enabled Repository -->
        <mkdir dir="target/test-resources/mail-transport-client-enabledRepository"/>
        <mkdir dir="target/test-resources/mail-transport-client-enabledRepository/modules"/>
        <copy file="test/org/apache/axis2/mail/mail-enabled-client-axis2.xml"
            tofile="target/test-resources/mail-transport-client-enabledRepository/axis2.xml"/>
        <copy file="../addressing/target/addressing.mar"
            tofile="target/test-resources/mail-transport-client-enabledRepository/modules/addressing.mar"/>

        <!-- Create Mail Server transport enabled Repository -->
        <mkdir dir="target/test-resources/mail-transport-server-enabledRepository"/>
        <mkdir dir="target/test-resources/mail-transport-server-enabledRepository/modules"/>
        <copy file="test/org/apache/axis2/mail/mail-enabled-server-axis2.xml"
            tofile="target/test-resources/mail-transport-server-enabledRepository/axis2.xml"/>
        <copy file="../addressing/target/addressing.mar"
            tofile="target/test-resources/mail-transport-server-enabledRepository/modules/addressing.mar"/>

        <mkdir dir="target/test-resources/MessageContextInjectionRepo"/>
        <mkdir dir="target/test-resources/intregrationRepo/modules"/>
        <copy file="../addressing/target/addressing.mar"
              tofile="target/test-resources/intregrationRepo/modules/addressing.mar"/>


        <!-- Commons transport enabled enabled Repository -->
        <mkdir dir="target/test-resources/commons-http-enabledRepository"/>
        <copy file="test/org/apache/axis2/engine/commons-http-enabled-axis2.xml"
            tofile="target/test-resources/commons-http-enabledRepository/axis2.xml"/>

        <!-- MTOM enabled Repository -->
        <mkdir dir="target/test-resources/MTOM-enabledRepository"/>
        <copy file="test/org/apache/axis2/mtom/MTOM-enabled-axis2.xml"
            tofile="target/test-resources/MTOM-enabledRepository/axis2.xml"/>
            
        <!-- MTOM enabled Repository -->
        <mkdir dir="target/test-resources/MTOM-fileCache-enabledRepository"/>
        <copy file="test/org/apache/axis2/mtom/MTOM-fileCache-enabled-axis2.xml"
            tofile="target/test-resources/MTOM-fileCache-enabledRepository/axis2.xml"/>
          
          <!-- Groovy repository -->  
        <mkdir dir="target/groovyRepo"/>
        <mkdir dir="target/groovyRepo/services"/>
        <mkdir dir="target/groovyRepo/modules"/>
        <ant:copy file="../samples/target/samples/groovyService.aar" tofile="target/groovyRepo/services/groovyService.aar"/>   
        <copy file="../addressing/target/addressing.mar"
            tofile="target/groovyRepo/modules/addressing.mar"/>

	<!--Axis2 repositories for WS-Security interop tests -->

	<!-- Scenario 1 -->
        <mkdir dir="target/test-resources/scenario1_client_repo"/>
        <mkdir dir="target/test-resources/scenario1_client_repo/modules"/>
        <mkdir dir="target/test-resources/scenario1_client_repo/services"/>

        <mkdir dir="target/test-resources/scenario1_service_repo"/>
        <mkdir dir="target/test-resources/scenario1_service_repo/services"/>
        <mkdir dir="target/test-resources/scenario1_service_repo/modules"/>

	<!-- setup scenario 1 client repository-->
        <copy file="test-resources/security/s1.client.axis2.xml"
            tofile="target/test-resources/scenario1_client_repo/axis2.xml"/>
        <copy file="../security/target/security.mar"
            tofile="target/test-resources/scenario1_client_repo/modules/security.mar"/>

	<!-- This is to add the PWCallback in to the classpath for the client to pick
	     the password callback class.
	-->
   	<ant:path id="sec.interop.service.jar" location="../security/target/PingPort.aar"/>
        <maven:addPath id="maven.dependency.classpath" refid="sec.interop.service.jar"/>

	<!-- setup scenario 1 service repository-->
        <copy file="test-resources/security/s1.service.axis2.xml"
            tofile="target/test-resources/scenario1_service_repo/axis2.xml"/>
        <copy file="../security/target/security.mar"
            tofile="target/test-resources/scenario1_service_repo/modules/security.mar"/>
        <copy file="../security/target/PingPort.aar"
            tofile="target/test-resources/scenario1_service_repo/services/PingPort.aar"/>

	<!-- Scenario 2 -->
        <mkdir dir="target/test-resources/scenario2_client_repo"/>
        <mkdir dir="target/test-resources/scenario2_client_repo/modules"/>

        <mkdir dir="target/test-resources/scenario2_service_repo"/>
        <mkdir dir="target/test-resources/scenario2_service_repo/services"/>
        <mkdir dir="target/test-resources/scenario2_service_repo/modules"/>

	<!-- setup scenario 2 client repository-->
        <copy file="test-resources/security/s2.client.axis2.xml"
            tofile="target/test-resources/scenario2_client_repo/axis2.xml"/>
        <copy file="../security/target/security.mar"
            tofile="target/test-resources/scenario2_client_repo/modules/security.mar"/>

	<!-- setup scenario 2 service repository-->
        <copy file="test-resources/security/s2.service.axis2.xml"
            tofile="target/test-resources/scenario2_service_repo/axis2.xml"/>
        <copy file="../security/target/security.mar"
            tofile="target/test-resources/scenario2_service_repo/modules/security.mar"/>
        <copy file="../security/target/PingPort.aar"
            tofile="target/test-resources/scenario2_service_repo/services/PingPort.aar"/>

	<!-- Scenario 2a -->
        <mkdir dir="target/test-resources/scenario2a_client_repo"/>
        <mkdir dir="target/test-resources/scenario2a_client_repo/modules"/>

        <mkdir dir="target/test-resources/scenario2a_service_repo"/>
        <mkdir dir="target/test-resources/scenario2a_service_repo/services"/>
        <mkdir dir="target/test-resources/scenario2a_service_repo/modules"/>

	<!-- setup scenario 2a client repository-->
        <copy file="test-resources/security/s2a.client.axis2.xml"
            tofile="target/test-resources/scenario2a_client_repo/axis2.xml"/>
        <copy file="../security/target/security.mar"
            tofile="target/test-resources/scenario2a_client_repo/modules/security.mar"/>

	<!-- setup scenario 2a service repository-->
        <copy file="test-resources/security/s2a.service.axis2.xml"
            tofile="target/test-resources/scenario2a_service_repo/axis2.xml"/>
        <copy file="../security/target/security.mar"
            tofile="target/test-resources/scenario2a_service_repo/modules/security.mar"/>
        <copy file="../security/target/PingPort.aar"
            tofile="target/test-resources/scenario2a_service_repo/services/PingPort.aar"/>

	<!-- Scenario 3 -->
        <mkdir dir="target/test-resources/scenario3_client_repo"/>
        <mkdir dir="target/test-resources/scenario3_client_repo/modules"/>

        <mkdir dir="target/test-resources/scenario3_service_repo"/>
        <mkdir dir="target/test-resources/scenario3_service_repo/services"/>
        <mkdir dir="target/test-resources/scenario3_service_repo/modules"/>

	<!-- setup scenario 3 client repository-->
        <copy file="test-resources/security/s3.client.axis2.xml"
            tofile="target/test-resources/scenario3_client_repo/axis2.xml"/>
        <copy file="../security/target/security.mar"
            tofile="target/test-resources/scenario3_client_repo/modules/security.mar"/>

	<!-- setup scenario 3 service repository-->
        <copy file="test-resources/security/s3.service.axis2.xml"
            tofile="target/test-resources/scenario3_service_repo/axis2.xml"/>
        <copy file="../security/target/security.mar"
            tofile="target/test-resources/scenario3_service_repo/modules/security.mar"/>
        <copy file="../security/target/PingPort.aar"
            tofile="target/test-resources/scenario3_service_repo/services/PingPort.aar"/>

	<!-- Scenario 4 -->
        <mkdir dir="target/test-resources/scenario4_client_repo"/>
        <mkdir dir="target/test-resources/scenario4_client_repo/modules"/>

        <mkdir dir="target/test-resources/scenario4_service_repo"/>
        <mkdir dir="target/test-resources/scenario4_service_repo/services"/>
        <mkdir dir="target/test-resources/scenario4_service_repo/modules"/>

	<!-- setup scenario 4 client repository-->
        <copy file="test-resources/security/s4.client.axis2.xml"
            tofile="target/test-resources/scenario4_client_repo/axis2.xml"/>
        <copy file="../security/target/security.mar"
            tofile="target/test-resources/scenario4_client_repo/modules/security.mar"/>

	<!-- setup scenario 4 service repository-->
        <copy file="test-resources/security/s4.service.axis2.xml"
            tofile="target/test-resources/scenario4_service_repo/axis2.xml"/>
        <copy file="../security/target/security.mar"
            tofile="target/test-resources/scenario4_service_repo/modules/security.mar"/>
        <copy file="../security/target/PingPort.aar"
            tofile="target/test-resources/scenario4_service_repo/services/PingPort.aar"/>

	<!-- Scenario 5 -->
        <mkdir dir="target/test-resources/scenario5_client_repo"/>
        <mkdir dir="target/test-resources/scenario5_client_repo/modules"/>

        <mkdir dir="target/test-resources/scenario5_service_repo"/>
        <mkdir dir="target/test-resources/scenario5_service_repo/services"/>
        <mkdir dir="target/test-resources/scenario5_service_repo/modules"/>

	<!-- setup scenario 5 client repository-->
        <copy file="test-resources/security/s5.client.axis2.xml"
            tofile="target/test-resources/scenario5_client_repo/axis2.xml"/>
        <copy file="../security/target/security.mar"
            tofile="target/test-resources/scenario5_client_repo/modules/security.mar"/>

	<!-- setup scenario 5 service repository-->
        <copy file="test-resources/security/s5.service.axis2.xml"
            tofile="target/test-resources/scenario5_service_repo/axis2.xml"/>
        <copy file="../security/target/security.mar"
            tofile="target/test-resources/scenario5_service_repo/modules/security.mar"/>
        <copy file="../security/target/PingPort.aar"
            tofile="target/test-resources/scenario5_service_repo/services/PingPort.aar"/>

	<!-- Scenario 6 -->
        <mkdir dir="target/test-resources/scenario6_client_repo"/>
        <mkdir dir="target/test-resources/scenario6_client_repo/modules"/>

        <mkdir dir="target/test-resources/scenario6_service_repo"/>
        <mkdir dir="target/test-resources/scenario6_service_repo/services"/>
        <mkdir dir="target/test-resources/scenario6_service_repo/modules"/>

	<!-- setup scenario 6 client repository-->
        <copy file="test-resources/security/s6.client.axis2.xml"
            tofile="target/test-resources/scenario6_client_repo/axis2.xml"/>
        <copy file="../security/target/security.mar"
            tofile="target/test-resources/scenario6_client_repo/modules/security.mar"/>

	<!-- setup scenario 6 service repository-->
        <copy file="test-resources/security/s6.service.axis2.xml"
            tofile="target/test-resources/scenario6_service_repo/axis2.xml"/>
        <copy file="../security/target/security.mar"
            tofile="target/test-resources/scenario6_service_repo/modules/security.mar"/>
        <copy file="../security/target/PingPort.aar"
            tofile="target/test-resources/scenario6_service_repo/services/PingPort.aar"/>

	<!-- Scenario 7 -->
        <mkdir dir="target/test-resources/scenario7_client_repo"/>
        <mkdir dir="target/test-resources/scenario7_client_repo/modules"/>

        <mkdir dir="target/test-resources/scenario7_service_repo"/>
        <mkdir dir="target/test-resources/scenario7_service_repo/services"/>
        <mkdir dir="target/test-resources/scenario7_service_repo/modules"/>

	<!-- setup scenario 7 client repository-->
        <copy file="test-resources/security/s7.client.axis2.xml"
            tofile="target/test-resources/scenario7_client_repo/axis2.xml"/>
        <copy file="../security/target/security.mar"
            tofile="target/test-resources/scenario7_client_repo/modules/security.mar"/>

	<!-- setup scenario 7 service repository-->
        <copy file="test-resources/security/s7.service.axis2.xml"
            tofile="target/test-resources/scenario7_service_repo/axis2.xml"/>
        <copy file="../security/target/security.mar"
            tofile="target/test-resources/scenario7_service_repo/modules/security.mar"/>
        <copy file="../security/target/PingPort.aar"
            tofile="target/test-resources/scenario7_service_repo/services/PingPort.aar"/>

	<!-- Copying the DOM3 stuff to the endorsed dir -->
        <mkdir dir="target/test-resources/endorsed"/>
	<copy file="${maven.repo.local}/xerces/jars/xercesImpl-2.6.2.jar" todir="target/test-resources/endorsed"/>
	<copy file="${maven.repo.local}/xerces/jars/xmlParserAPIs-2.6.2.jar" todir="target/test-resources/endorsed"/>

	<echo>${java.endorsed.dirs}</echo>

	<!-- Scenario ST1 -->
        <mkdir dir="target/test-resources/scenarioST1_client_repo"/>
        <mkdir dir="target/test-resources/scenarioST1_client_repo/modules"/>

        <mkdir dir="target/test-resources/scenarioST1_service_repo"/>
        <mkdir dir="target/test-resources/scenarioST1_service_repo/services"/>
        <mkdir dir="target/test-resources/scenarioST1_service_repo/modules"/>

	<!-- setup scenario ST1 client repository-->
        <copy file="test-resources/security/sST1.client.axis2.xml"
            tofile="target/test-resources/scenarioST1_client_repo/axis2.xml"/>
        <copy file="../security/target/security.mar"
            tofile="target/test-resources/scenarioST1_client_repo/modules/security.mar"/>

	<!-- setup scenario ST1 service repository-->
        <copy file="test-resources/security/sST1.service.axis2.xml"
            tofile="target/test-resources/scenarioST1_service_repo/axis2.xml"/>
        <copy file="../security/target/security.mar"
            tofile="target/test-resources/scenarioST1_service_repo/modules/security.mar"/>
        <copy file="../security/target/PingPort.aar"
            tofile="target/test-resources/scenarioST1_service_repo/services/PingPort.aar"/>


	<!-- MTOM Optimized Security Test -->
        <mkdir dir="target/test-resources/mtom_sec_client_repo"/>
        <mkdir dir="target/test-resources/mtom_sec_client_repo/modules"/>

        <mkdir dir="target/test-resources/mtom_sec_service_repo"/>
        <mkdir dir="target/test-resources/mtom_sec_service_repo/services"/>
        <mkdir dir="target/test-resources/mtom_sec_service_repo/modules"/>

	<!-- MTOM Optimized Security Test client repository-->
        <copy file="test-resources/security/secMtom.client.axis2.xml"
            tofile="target/test-resources/mtom_sec_client_repo/axis2.xml"/>
        <copy file="../security/target/security.mar"
            tofile="target/test-resources/mtom_sec_client_repo/modules/security.mar"/>

	<!-- MTOM Optimized Security Test service repository-->
        <copy file="test-resources/security/secMtom.service.axis2.xml"
            tofile="target/test-resources/mtom_sec_service_repo/axis2.xml"/>
        <copy file="../security/target/security.mar"
            tofile="target/test-resources/mtom_sec_service_repo/modules/security.mar"/>
        <copy file="../security/target/PingPort.aar"
            tofile="target/test-resources/mtom_sec_service_repo/services/PingPort.aar"/>

    <!-- Standard repository -->
    <mkdir dir="target/Repository"/>
        <mkdir dir="target/Repository/services"/>
        <mkdir dir="target/Repository/modules"/>
        <copy file="../addressing/target/addressing.mar"
            tofile="target/Repository/modules/addressing.mar"/>

        <j:jelly xmlns="jelly:ant">
            <ant:ant antfile="build.xml" inheritall="true" inheritrefs="true" dir="test-resources/SOAP12Testing/SOAP12TestModuleB"/>
            <ant:ant antfile="build.xml" inheritall="true" inheritrefs="true" dir="test-resources/SOAP12Testing/SOAP12TestModuleC"/>
            <ant:ant antfile="build.xml" inheritall="true" inheritrefs="true" dir="test-resources/SOAP12Testing/SOAP12TestServiceB"/>
            <ant:ant antfile="build.xml" inheritall="true" inheritrefs="true" dir="test-resources/SOAP12Testing/SOAP12TestServiceC"/>
        </j:jelly>
    </postGoal>

    <postGoal name="test:test">
        <attainGoal name="mail-tests"/>
    </postGoal>
    
    <goal name="mail-tests">
      <!--   	 TODO call the Mail tests if the mail jar is presents
        <j:if test="${maven.repo.local}/j2ee/jars/mail.jar"> 
            <ant:ant antfile="script/mail-test.xml" inheritall="true" inheritrefs="true" dir="."/>
         </j:if> 
         maven -Dtestcase=org.foo.bar.MyTest test:single-test
         -->
    </goal>

    <!-- ================================================================ -->
    <!--- Google Mail Sample -->
    <!-- ================================================================ -->

    <goal name="test-mail">
        <echo message="running Mail tests"/>
        <echo message="${maven.repo.local}"/>
        <junit printsummary="yes" haltonfailure="yes">
            <classpath>
                <fileset dir="${maven.repo.local}">
                    <include name="j2ee/jars/***.jar"/>
                    <include name="axis/jars/axis2-core-0.9.jar"/>
                    <include name="axis/jars/axis2-xml-0.9.jar"/>
                    <include name="axis/jars/axis2-wsdl-0.9.jar"/>
                    <include name="axis/jars/axis-wsdl4j-1.2.jar"/>
                    <include name="commons-logging/jars/commons-logging-1.0.3.jar"/>
                    <include name="stax/jars/stax-1.1.1-dev.jar"/>
                    <include name="stax/jars/stax-api-1.0.jar"/>
                </fileset>
                <pathelement location="target/test-classes"/>
                <path refid="maven.dependency.classpath"/>
            </classpath>
            <formatter type="plain"/>
            <test name="org.apache.axis2.mail.MailetRequestResponceRawXMLTest"/>
            <test name="org.apache.axis2.mail.MailOneWayRawXMLTest"/>
            <test name="org.apache.axis2.mail.MailRequestResponseRawXMLTest"/>
        </junit>
    </goal>

    <!-- ================================================================ -->
    <!--- Run the Interop Tests -->
    <!-- ================================================================ -->

    <goal name="doInterop-test">
        <taskdef name="wsdl2java"
            classname="org.apache.axis2.tool.ant.AntCodegenTask"
            classpathref="maven.dependency.classpath"/>
        <j:set var="interop3.dir" value="target/interop3"/>
        <j:set var="work.dir" value="${interop3.dir}/work"/>
        <j:set var="calss.dir" value="${interop3.dir}/classes"/>
        <j:set var="wsdl.dir" value="${basedir}/../wsdl/test-resources/"/>

        <mkdir dir="${interop3.dir}"/>
        <mkdir dir="${work.dir}"/>
        <mkdir dir="${calss.dir}"/>

        <wsdl2java WSDLFileName="${wsdl.dir}compound2.wsdl" output="${work.dir}"/>
        <!--
        <java classname="org.apache.axis2.wsdl.WSDL2Java">
<classpath refid="maven.dependency.classpath"/>
<arg value="-uri"/>
<arg file="${wsdl.dir}/compound2.wsdl"/>
<arg value="-o"/>
<arg file="${work.dir}"/>
</java>
        -->
        <copy file="${wsdl.dir}/InteropClient2.java" todir="${work.dir}" overwrite="true"/>
        <copy file="${wsdl.dir}/echoEmployeeDatabindingSupporter.java" todir="${work.dir}/org/soapinterop/databinding" overwrite="true"/>

        <move todir="${classes.dir}/schema">
            <fileset dir="${work.dir}/schema"/>
        </move>

        <javac srcdir="${work.dir}" destdir="${classes.dir}" debug="on">
            <classpath refid="maven.dependency.classpath"/>
        </javac>

        <!-- Run the interop test -->
        <java classname="Client">
            <classpath refid="maven.dependency.classpath"/>
        </java>

        <junit dir="${classes.dir}" printsummary="yes" haltonfailure="yes">
            <classpath refid="maven.dependency.classpath"/>
            <formatter type="plain"/>
            <test name="InteropClient2"/>
        </junit>
    </goal>
    
     <!-- ================================================================ -->
    <!--- Run the Interop Tests -->
    <!-- ================================================================ -->

    <goal name="testWSDLs">
        <taskdef name="wsdl2java"
            classname="org.apache.axis2.tool.ant.AntCodegenTask"
            classpathref="maven.dependency.classpath"/>
        <j:set var="codeGen.dir" value="${basedir}/target/code-gen"/>
        <j:set var="wsdl.dir" value="${basedir}/../wsdl/test-resources/"/>
        
        <mkdir dir="${codeGen.dir}/1"/>  
       	<mkdir dir="${codeGen.dir}/1/src"/>  
       	<mkdir dir="${codeGen.dir}/1/classes"/>  
       	
        <wsdl2java WSDLFileName="${wsdl.dir}/compound2.wsdl" 
        	output="${codeGen.dir}/1/src"> 
        	<classpath refid="maven.dependency.classpath" />
        </wsdl2java>	
        <move todir="${codeGen.dir}/1/classes/schema">
    		<fileset dir="${codeGen.dir}/1/src/schema"/>
       </move>
        <javac srcdir="${codeGen.dir}/1/src" destdir="${codeGen.dir}/1/classes" debug="on">
           <classpath refid="maven.dependency.classpath" />
        </javac>

        <mkdir dir="${codeGen.dir}/2"/>  
       	<mkdir dir="${codeGen.dir}/2/src"/>  
       	<mkdir dir="${codeGen.dir}/2/classes"/>  
       	
        <wsdl2java WSDLFileName="${wsdl.dir}/complex-doc-literal.wsdl" output="${codeGen.dir}/2/src"/> 
        <move todir="${codeGen.dir}/2/classes/schema">
    		<fileset dir="${codeGen.dir}/2/src/schema"/>
        </move>
        <javac srcdir="${codeGen.dir}/2/src" destdir="${codeGen.dir}/2/classes" debug="on">
           <classpath refid="maven.dependency.classpath" />
        </javac>
        
        <mkdir dir="${codeGen.dir}/3"/>  
       	<mkdir dir="${codeGen.dir}/3/src"/>  
       	<mkdir dir="${codeGen.dir}/3/classes"/>  
       	
        <wsdl2java WSDLFileName="${wsdl.dir}/simple-doc-literal.wsdl" output="${codeGen.dir}/3/src"/> 
        <move todir="${codeGen.dir}/3/classes/schema">
    		<fileset dir="${codeGen.dir}/3/src/schema"/>
       </move>
        <javac srcdir="${codeGen.dir}/3/src" destdir="${codeGen.dir}/3/classes" debug="on">
           <classpath refid="maven.dependency.classpath" />
        </javac>

    </goal>
</project>

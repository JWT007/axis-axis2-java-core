<xsl:stylesheet version="1.0"
                xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
    <xsl:output method="text"/>

    <xsl:variable name="targetNs" select="/javaConstruct/@targetNamespace"/>

    <xsl:template match="javaConstruct">package <xsl:value-of select="@package"/>;
<xsl:for-each select="importList/import">
import <xsl:value-of select="@value"/>;</xsl:for-each>
<xsl:text>
</xsl:text>
/**
 * <xsl:value-of select="@name"/>.java
 *
 * This class was generated by Apache Axis2.
 * Apache Axis2 {version} - {date} {time}
 *
 */
<xsl:for-each select="annotation">
    <xsl:variable name="annoparamcount" select="count(param)"/>
@<xsl:value-of select="@name"/>(<xsl:for-each select="param">
        <xsl:choose>
            <xsl:when test="$annoparamcount = position()">
                <xsl:value-of select="@type"/>
                <xsl:text>=</xsl:text>"<xsl:value-of select="@value"/>"</xsl:when>
            <xsl:otherwise>
                <xsl:value-of select="@type"/>
                <xsl:text>=</xsl:text>"<xsl:value-of select="@value"/>",<xsl:text> </xsl:text>
            </xsl:otherwise>
        </xsl:choose>
    </xsl:for-each>)</xsl:for-each>
public interface <xsl:value-of select="@name"/>{
<xsl:apply-templates/>
}
    </xsl:template>

    <xsl:template match="method">
    <xsl:variable name="outparamcount" select="count(output/param)"/>
    /**<xsl:for-each select="input/param">
    * @param <xsl:value-of select="@name"/></xsl:for-each><xsl:if test="$outparamcount != 0">
    * @return
    *    <xsl:value-of select="output/param/@shorttype"/></xsl:if><xsl:for-each select="fault/param[@type!='']">
    * @throws <xsl:value-of select="@name"/></xsl:for-each>
    */
    @javax.jws.WebMethod
    <xsl:choose>
        <xsl:when test="$outparamcount = 0">@javax.jws.Oneway</xsl:when>
        <xsl:otherwise>@javax.jws.WebResult(targetNamespace = "<xsl:value-of select="$targetNs"/>")</xsl:otherwise>
    </xsl:choose>
    public <xsl:choose>
                <xsl:when test="$outparamcount = 0">void </xsl:when>
                <xsl:otherwise><xsl:value-of select="output/param/@type"/><xsl:text> </xsl:text></xsl:otherwise>
           </xsl:choose>
    <xsl:value-of select="@name"/>(<xsl:variable name="inparamcount" select="count(input/param)"/>
    <xsl:for-each select="input/param">
        @javax.jws.WebParam(name = "<xsl:value-of select="@name"/>", targetNamespace = "<xsl:value-of select="$targetNs"/>")
        <xsl:choose>
            <xsl:when test="$inparamcount = position()">
                <xsl:value-of select="@type"/>
                <xsl:text> </xsl:text>
                <xsl:value-of select="@name"/>
            </xsl:when>
            <xsl:otherwise>
                <xsl:value-of select="@type"/>
                <xsl:text> </xsl:text>
                <xsl:value-of select="@name"/>,<xsl:text> </xsl:text>
            </xsl:otherwise>
        </xsl:choose>
    </xsl:for-each>)<!--<xsl:for-each select="fault/param[@type!='']">
               <xsl:if test="position()=1">
        throws </xsl:if>
               <xsl:if test="position()>1">,</xsl:if><xsl:value-of select="@name"/>
           </xsl:for-each>-->;
    </xsl:template>

</xsl:stylesheet>

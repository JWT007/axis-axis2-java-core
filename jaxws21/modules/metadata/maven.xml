<?xml version="1.0" encoding="UTF-8"?>

<!--
  ~ Licensed to the Apache Software Foundation (ASF) under one
  ~ or more contributor license agreements. See the NOTICE file
  ~ distributed with this work for additional information
  ~ regarding copyright ownership. The ASF licenses this file
  ~ to you under the Apache License, Version 2.0 (the
  ~ "License"); you may not use this file except in compliance
  ~ with the License. You may obtain a copy of the License at
  ~
  ~ http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing,
  ~ software distributed under the License is distributed on an
  ~ "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
  ~ KIND, either express or implied. See the License for the
  ~ specific language governing permissions and limitations
  ~ under the License.
  -->

<!-- $Revision: 1.21 $ $Date: 2004-10-27 20:54:09 +0600 (Wed, 27 Oct 2004) $ -->

<project default="jar"
         xmlns:j="jelly:core" 
         xmlns:u="jelly:util"
         xmlns:maven="jelly:maven"
         xmlns:util="jelly:util"
         xmlns:deploy="deploy"
         xmlns:ant="jelly:ant">

    <preGoal name="itest:compile">
        <u:file var="file" name="${maven.itest.src}"/>
        <j:if test="${!file.exists()}">
            <j:expr value="${context.setVariable('maven.itest.skip', 'true')}"/>
        </j:if>
    </preGoal>

	<!-- run the JAXB schema compiler -->
    <preGoal name="test:compile">

        <j:set var="compiled.classes.dir" value="target/test-classes"/>
        
    	<!-- Theres got to be a better way to do this -->
        <j:set var="schema.source.dir" value="test-resources/xsd"/>
    	<j:set var="wsdl.source.dir" value="test-resources/wsdl"/>
        <j:set var="schema.output.base.dir" value="target/schema"/>
        <j:set var="schema.generated.src.dir" value="${schema.output.base.dir}/src"/>
        <j:set var="schema.generated.classes.dir" value="${schema.output.base.dir}/classes"/>
        
    	<!-- make the dirs -->
        <mkdir dir="${schema.output.base.dir}"/>
        <mkdir dir="${schema.generated.src.dir}"/>
        <mkdir dir="${schema.generated.classes.dir}"/>

    	<!-- Run JAXB schema compiler with designated schemas -->
        <ant:echo>Generating JAX-B classes from XSDs</ant:echo>    

    	<ant:echo>Generating java from ProxyDocLitWrapped.wsdl</ant:echo>
    	<java classname="com.sun.tools.xjc.Driver" fork="true"> 
    		<jvmarg line="${maven.junit.jvmargs2}"/>
    	    <classpath refid="maven.dependency.classpath"/>
    	    <classpath location="${compiled.classes.dir}"/>
    	    <arg line="-d ${schema.generated.src.dir} -quiet -p org.test.proxy.doclitwrapped -quiet -wsdl ${wsdl.source.dir}/ProxyDocLitWrapped.wsdl"/>
    	</java>

    	<!-- Compile the generated classes -->
    	<ant:echo>Compiling generated schema</ant:echo>
        <javac destdir="${schema.generated.classes.dir}" srcdir="${schema.generated.src.dir}">
            <classpath refid="maven.dependency.classpath"></classpath>
            <classpath location="${compiled.classes.dir}"></classpath>
        </javac>

        <ant:path id="schema.generated.classes.dir" location="${schema.generated.classes.dir}"/>
        <maven:addPath id="maven.dependency.classpath" refid="schema.generated.classes.dir"/>
    </preGoal>

	    <postGoal name="java:jar-resources">
	      <tstamp>
	        <format property="build.time" pattern="MMM dd, yyyy (hh:mm:ss z)" locale="en"/>
	      </tstamp>
	      <replace dir="${maven.build.dest}/org/apache/axis2/jaxws/i18n">
	        <include name="resource*.properties"/>
	        <replacefilter token="#today#" value="${build.time}"/>
	        <replacefilter token="#axisVersion#" value="${pom.currentVersion}"/>
	      </replace> 
	    </postGoal>
</project>
